name: 'dotnet restore'
description: 'dotnet restore'
inputs:
  path:  
    description: 'path'
    required: true
  newTag:  
    description: 'newTag'
    required: true
  temp_path:  
    description: 'temp_path'
    required: true
  build_configuration:
    description: "build configuration"
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - run: |
        cd "${{ inputs.path }}"
        if(!(test-path "${{ inputs.temp_path }}")) {
          mkdir "${{ inputs.temp_path }}"
        }
        
        Get-ChildItem -Path .\  -Recurse -Filter "wwwroot" -Directory  -Name|  ForEach-Object {
            $pt =  (get-item $_ ).parent.FullName
            cd "$pt"
            Get-ChildItem -Path .\  -Filter "*.csproj" -File  -Name |  ForEach-Object {
                echo "dotnet publish $_ --configuration ${{ inputs.build_configuration }} --output ${{ inputs.temp_path }} /property:Version=${{ inputs.newTag }}"
                dotnet publish $_ --configuration "${{ inputs.build_configuration }}" --output "${{ inputs.temp_path }}" /property:Version="${{ inputs.newTag }}"
            }
        }
      shell: powershell
